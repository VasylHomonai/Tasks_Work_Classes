from datetime import datetime as dt
import time
import requests

class CurrencyAPI:
    cache = {}

    def __init__(self, api_key, api_name):
        self.api_key = api_key
        self.api_name = api_name

    def set_to_cache(self, key, value_buy, value_sell):
        # –ü—Ä–∏–≤'—è–∑–∫–∞ –∫–ª—é—á–∞ –¥–æ –¥–∞—Ç–∏, —â–æ–± –∫–µ—à —Å–∫–∏–¥–∞–≤—Å—è 1 —Ä–∞–∑ –Ω–∞ –¥–æ–±—É.
        today = dt.now().strftime('%Y-%m-%d')
        full_key = f"{key}_{today}"

        # –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –∫–ª—é—á—ñ–≤ —ñ–∑ –∫–µ—à—É.
        self.clear_old_cache()

        # –ó–∞–ø–∏—Å—É—î–º–æ –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω—å —É –∫–µ—à (–∫—É—Ä—Å –∫—É–ø—ñ–≤–ª—ñ —Ç–∞ –ø—Ä–æ–¥–∞–∂—É).
        self.cache[full_key] = {"rateBuy": value_buy, "rateSell": value_sell}
        print(f"–î–æ–¥–∞–Ω–æ –¥–æ –∫–µ—à—É: –∫–ª—é—á = {full_key}, –∑–Ω–∞—á–µ–Ω–Ω—è = rateBuy: {value_buy}, rateSell: {value_sell}\n")

    def get_from_cache(self, key):
        # –î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –∫–ª—é—á–∞ –≤—ñ–¥–Ω–æ—Å–Ω–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –¥–Ω—è, –≤ —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –±—É–¥–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏—Å—å –Ω–æ–≤–∏–π –∫–µ—à –¥–ª—è –∫–ª—é—á–∞
        today = dt.now().strftime('%Y-%m-%d')
        full_key = f"{key}_{today}"

        # –û—Ç—Ä–∏–º—É—î –ø–∞—Ä—É –∑–Ω–∞—á–µ–Ω—å –∑ –∫–µ—à—É –∑–∞ –∫–ª—é—á–µ–º.
        value = self.cache.get(full_key)
        if value is not None:
            return value["rateBuy"], value["rateSell"]
        else:
            print(f"–ö–ª—é—á '{full_key}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –∫–µ—à—ñ.")
            return None

    def status_code(self, status_code):
        if status_code == 200:
            return True
        elif status_code == 404:
            return False
        elif status_code == 429:
            time.sleep(4)
            return False

    def clear_old_cache(self):
        today = dt.now().strftime('%Y-%m-%d')
        keys_to_delete = [k for k in self.cache if not k.endswith(f"_{today}")]
        for key in keys_to_delete:
            del self.cache[key]
            print(f"–°—Ç–∞—Ä—ñ –∫–ª—é—á—ñ –≤–∏–¥–∞–ª–µ–Ω–æ –∑ –∫–µ—à—É: {key}")

    def __repr__(self):
        return f"Name api: {self.api_name}. Date: {dt.now().strftime('%Y-%m-%d')}"


class MonoAPI(CurrencyAPI):
    def __init__(self, api_key, api_name, url: str):
        super().__init__(api_key, api_name)
        self.url = url
        self.data = None

    def get_currency(self, currency: str):
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –¥–∞–Ω–∏—Ö —É –∫–µ—à—É
        cached = self.get_from_cache(currency)
        if cached:
            rate_buy, rate_sell = cached
            print(f"–û—Ç—Ä–∏–º–∞–Ω–æ –∑ –∫–µ—à—É:")
            print(f"{codes.get(currency).get('emj')} {codes.get(currency).get('name')} to üí∞UAH:\nSell: {rate_sell}\nBuy: {rate_buy}\n")
            return rate_buy, rate_sell

        # –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ –∑–∞–ø–∏—Ç—É
        if not self.data:
            try:
                response = requests.get(self.url)
            except requests.exceptions.RequestException as e:
                print(f"–ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É: {e}")
                return None

            if self.status_code(response.status_code):
                self.data = response.json()                 # –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É self.data
                result = self.parsing_data(currency)        # –≤–∏–∫–ª–∏–∫ –º–µ—Ç–æ–¥—É –ø–∞—Ä—Å–∏–Ω–≥—É parsing_data
                return result
            else:
                print(f"–ü–æ–º–∏–ª–∫–∞ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥—É: {response.status_code}")
                return None
        return self.parsing_data(currency)

    def parsing_data(self, currency: str):
        # –ü–∞—Ä—Å–∏–º–æ –æ—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ —Ç–∞ —à—É–∫–∞—î–º–æ –∫—É—Ä—Å –¥–ª—è –∑–∞–¥–∞–Ω–æ—ó –≤–∞–ª—é—Ç–∏ (currencyCodeA).
        for item in self.data:
            if str(item.get("currencyCodeA")) == currency:
                # –û—Ç—Ä–∏–º–∞—î–º–æ rateBuy —Ç–∞ rateSell
                rate_buy, rate_sell = item.get("rateBuy"), item.get("rateSell")
                # –û—Å–Ω–æ–≤–Ω–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç –≤–∏–≤–æ–¥—É –¥–∞–Ω–∏—Ö –Ω–∞ –µ–∫—Ä–∞–Ω
                print(
                    f"{codes.get(currency).get('emj')} {codes.get(currency).get('name')} to üí∞UAH:\nSell: {rate_sell}\nBuy: {rate_buy}")
                if rate_buy and rate_sell:
                    # –ü–µ—Ä–µ–¥–∞—î–º–æ –∫–ª—é—á —Ç–∞ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∑–∞–ø–∏—Å—É —É –∫–µ—à
                    self.set_to_cache(currency, rate_buy, rate_sell)
                    return rate_buy, rate_sell
                else:
                    print(f"–ö—É—Ä—Å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –≤–∞–ª—é—Ç–∏ {currency}")
                    return None

        print(f"–í–∞–ª—é—Ç–∞ {currency} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ —É –¥–∞–Ω–∏—Ö")
        return None


# –î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ –¥–µ–∫—ñ–ª—å–∫–æ—Ö –≤–∞–ª—é—Ç, —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ —É –ø–∞—Ä—Å–∏–Ω–≥—É, —â–æ–± –∫—Ä–∞—Å–∏–≤–æ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤–∞–ª—é—Ç–∏
codes = {
    "840" : {'emj': 'üíµ', 'name': 'USD'}
    , "978" : {'emj': 'üí∂', 'name': 'EUR'}
    ,"8401" : {'emj': 'NoLabel', 'name': 'NoName'}
}

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è 2-—Ö –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤ –∫–ª–∞—Å—É mono —Ç–∞ mono_b, –æ–¥–∏–Ω –º–∞—î —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–µ—à, –¥—Ä—É–≥–∏–π –ø–æ–≤–∏–Ω–µ–Ω –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –¥–∞–Ω–∏–π –∫–µ—à
mono = MonoAPI(
    api_key="",
    api_name="MonoBank",
    url="https://api.monobank.ua/bank/currency"
)

mono_b = MonoAPI(
    api_key="",
    api_name="MonoBank",
    url="https://api.monobank.ua/bank/currency"
)

# –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –º–µ—Ç–æ–¥ get_currency –¥–ª—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞, –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–¥–∞–Ω–∏—Ö –≤–∞–ª—é—Ç —É codes
print("–ö—É—Ä—Å–∏ –ú–æ–Ω–æ–±–∞–Ω–∫—É:")
for key, value in codes.items():
    rate = mono.get_currency(key)

    # –î–∞–Ω–∏–π print –∑–∞–∫–æ–º–µ–Ω—Ç—É–≤–∞–≤, –≤—ñ–Ω –º–æ–∂–µ –±—É—Ç–∏ 2-–º –≤–∞—Ä—ñ–∞–Ω—Ç–æ–º –≤–∏–≤–æ–¥—É –¥–∞–Ω–∏—Ö. –û—Å–Ω–æ–≤–Ω–∏–π —É parsing_data
    # print(f"–ö—É—Ä—Å {value.get('emj')} {value.get('name')}: {rate}")

print("*" * 50, end="\n\n")
# –í–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –º–µ—Ç–æ–¥ get_currency –¥–ª—è –µ–∫–∑–µ–º–ø–ª—è—Ä–∞, –¥–ª—è –ø–æ–ø–µ—Ä–µ–¥–Ω—å–æ –∑–∞–¥–∞–Ω–∏—Ö –≤–∞–ª—é—Ç —É codes. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–±–æ—Ç–∏ –∫–µ—à—É.
print("–ö—É—Ä—Å–∏ –ú–æ–Ω–æ–±–∞–Ω–∫—É, 2-–π –∑–∞–ø–∏—Ç:")
for key, value in codes.items():
    rate = mono_b.get_currency(key)